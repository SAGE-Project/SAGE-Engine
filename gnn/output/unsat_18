(declare-fun C1_VM1 () Int)
(declare-fun p0 () Bool)
(declare-fun C1_VM2 () Int)
(declare-fun p1 () Bool)
(declare-fun C1_VM3 () Int)
(declare-fun p2 () Bool)
(declare-fun C1_VM4 () Int)
(declare-fun p3 () Bool)
(declare-fun C1_VM5 () Int)
(declare-fun p4 () Bool)
(declare-fun C1_VM6 () Int)
(declare-fun p5 () Bool)
(declare-fun C2_VM1 () Int)
(declare-fun p6 () Bool)
(declare-fun C2_VM2 () Int)
(declare-fun p7 () Bool)
(declare-fun C2_VM3 () Int)
(declare-fun p8 () Bool)
(declare-fun C2_VM4 () Int)
(declare-fun p9 () Bool)
(declare-fun C2_VM5 () Int)
(declare-fun p10 () Bool)
(declare-fun C2_VM6 () Int)
(declare-fun p11 () Bool)
(declare-fun C3_VM1 () Int)
(declare-fun p12 () Bool)
(declare-fun C3_VM2 () Int)
(declare-fun p13 () Bool)
(declare-fun C3_VM3 () Int)
(declare-fun p14 () Bool)
(declare-fun C3_VM4 () Int)
(declare-fun p15 () Bool)
(declare-fun C3_VM5 () Int)
(declare-fun p16 () Bool)
(declare-fun C3_VM6 () Int)
(declare-fun p17 () Bool)
(declare-fun C4_VM1 () Int)
(declare-fun p18 () Bool)
(declare-fun C4_VM2 () Int)
(declare-fun p19 () Bool)
(declare-fun C4_VM3 () Int)
(declare-fun p20 () Bool)
(declare-fun C4_VM4 () Int)
(declare-fun p21 () Bool)
(declare-fun C4_VM5 () Int)
(declare-fun p22 () Bool)
(declare-fun C4_VM6 () Int)
(declare-fun p23 () Bool)
(declare-fun C5_VM1 () Int)
(declare-fun p24 () Bool)
(declare-fun C5_VM2 () Int)
(declare-fun p25 () Bool)
(declare-fun C5_VM3 () Int)
(declare-fun p26 () Bool)
(declare-fun C5_VM4 () Int)
(declare-fun p27 () Bool)
(declare-fun C5_VM5 () Int)
(declare-fun p28 () Bool)
(declare-fun C5_VM6 () Int)
(declare-fun p29 () Bool)
(declare-fun VM1Type () Int)
(declare-fun p30 () Bool)
(declare-fun VM2Type () Int)
(declare-fun p31 () Bool)
(declare-fun VM3Type () Int)
(declare-fun p32 () Bool)
(declare-fun VM4Type () Int)
(declare-fun p33 () Bool)
(declare-fun VM5Type () Int)
(declare-fun p34 () Bool)
(declare-fun VM6Type () Int)
(declare-fun p35 () Bool)
(declare-fun p36 () Bool)
(declare-fun p37 () Bool)
(declare-fun p38 () Bool)
(declare-fun p39 () Bool)
(declare-fun p40 () Bool)
(declare-fun p41 () Bool)
(declare-fun p42 () Bool)
(declare-fun p43 () Bool)
(declare-fun p44 () Bool)
(declare-fun p45 () Bool)
(declare-fun p46 () Bool)
(declare-fun p47 () Bool)
(declare-fun p48 () Bool)
(declare-fun p49 () Bool)
(declare-fun p50 () Bool)
(declare-fun p51 () Bool)
(declare-fun p52 () Bool)
(declare-fun p53 () Bool)
(declare-fun p54 () Bool)
(declare-fun p55 () Bool)
(declare-fun p56 () Bool)
(declare-fun p57 () Bool)
(declare-fun p58 () Bool)
(declare-fun p59 () Bool)
(declare-fun p60 () Bool)
(declare-fun p61 () Bool)
(declare-fun p62 () Bool)
(declare-fun p63 () Bool)
(declare-fun p64 () Bool)
(declare-fun p65 () Bool)
(declare-fun p66 () Bool)
(declare-fun p67 () Bool)
(declare-fun p68 () Bool)
(declare-fun p69 () Bool)
(declare-fun p70 () Bool)
(declare-fun p71 () Bool)
(declare-fun p72 () Bool)
(declare-fun p73 () Bool)
(declare-fun p74 () Bool)
(declare-fun p75 () Bool)
(declare-fun PriceProv6 () Int)
(declare-fun PriceProv5 () Int)
(declare-fun |LabelConflict: 0| () Bool)
(declare-fun |LabelConflict: 1| () Bool)
(declare-fun |LabelConflict: 2| () Bool)
(declare-fun |LabelConflict: 3| () Bool)
(declare-fun |LabelConflict: 4| () Bool)
(declare-fun |LabelConflict: 5| () Bool)
(declare-fun |LabelConflict: 6| () Bool)
(declare-fun |LabelConflict: 7| () Bool)
(declare-fun |LabelConflict: 8| () Bool)
(declare-fun |LabelConflict: 9| () Bool)
(declare-fun |LabelConflict: 10| () Bool)
(declare-fun |LabelConflict: 11| () Bool)
(declare-fun |LabelConflict: 12| () Bool)
(declare-fun |LabelConflict: 13| () Bool)
(declare-fun |LabelConflict: 14| () Bool)
(declare-fun |LabelConflict: 15| () Bool)
(declare-fun |LabelConflict: 16| () Bool)
(declare-fun |LabelConflict: 17| () Bool)
(declare-fun |LabelConflict: 18| () Bool)
(declare-fun |LabelConflict: 19| () Bool)
(declare-fun |LabelConflict: 20| () Bool)
(declare-fun |LabelConflict: 21| () Bool)
(declare-fun |LabelConflict: 22| () Bool)
(declare-fun |LabelConflict: 23| () Bool)
(declare-fun |LabelConflict: 24| () Bool)
(declare-fun |LabelConflict: 25| () Bool)
(declare-fun |LabelConflict: 26| () Bool)
(declare-fun |LabelConflict: 27| () Bool)
(declare-fun |LabelConflict: 28| () Bool)
(declare-fun |LabelConflict: 29| () Bool)
(declare-fun LabelUpperLowerEqualBound0 () Bool)
(declare-fun LabelUpperLowerEqualBound1 () Bool)
(declare-fun |LabelConflict: 30| () Bool)
(declare-fun |LabelConflict: 31| () Bool)
(declare-fun |LabelConflict: 32| () Bool)
(declare-fun |LabelConflict: 33| () Bool)
(declare-fun |LabelConflict: 34| () Bool)
(declare-fun |LabelConflict: 35| () Bool)
(declare-fun |LabelConflict: 36| () Bool)
(declare-fun |LabelConflict: 37| () Bool)
(declare-fun |LabelConflict: 38| () Bool)
(declare-fun |LabelConflict: 39| () Bool)
(declare-fun |LabelConflict: 40| () Bool)
(declare-fun |LabelConflict: 41| () Bool)
(declare-fun |LabelConflict: 42| () Bool)
(declare-fun |LabelConflict: 43| () Bool)
(declare-fun |LabelConflict: 44| () Bool)
(declare-fun |LabelConflict: 45| () Bool)
(declare-fun |LabelConflict: 46| () Bool)
(declare-fun |LabelConflict: 47| () Bool)
(declare-fun |LabelConflict: 48| () Bool)
(declare-fun |LabelConflict: 49| () Bool)
(declare-fun |LabelConflict: 50| () Bool)
(declare-fun |LabelConflict: 51| () Bool)
(declare-fun |LabelConflict: 52| () Bool)
(declare-fun |LabelConflict: 53| () Bool)
(declare-fun |LabelFullDeployment: 2| () Bool)
(declare-fun |LabelFullDeployment: 3| () Bool)
(declare-fun |LabelFullDeployment: 4| () Bool)
(declare-fun |LabelFullDeployment: 5| () Bool)
(declare-fun |LabelFullDeployment: 6| () Bool)
(declare-fun |LabelFullDeployment: 7| () Bool)
(declare-fun |LabelOneToMany: 8| () Bool)
(declare-fun |LabelOneToMany: 9| () Bool)
(declare-fun LabelUpperLowerEqualBound10 () Bool)
(declare-fun LabelUpperLowerEqualBound11 () Bool)
(declare-fun LabelUpperLowerEqualBound12 () Bool)
(declare-fun LabelUpperLowerEqualBound13 () Bool)
(declare-fun LabelUpperLowerEqualBound14 () Bool)
(declare-fun PriceProv1 () Int)
(declare-fun p145 () Bool)
(declare-fun p146 () Bool)
(declare-fun PriceProv2 () Int)
(declare-fun p147 () Bool)
(declare-fun p148 () Bool)
(declare-fun PriceProv3 () Int)
(declare-fun p149 () Bool)
(declare-fun p150 () Bool)
(declare-fun PriceProv4 () Int)
(declare-fun p151 () Bool)
(declare-fun p152 () Bool)
(declare-fun p153 () Bool)
(declare-fun p154 () Bool)
(declare-fun p155 () Bool)
(declare-fun p156 () Bool)
(declare-fun StorageProv1 () Int)
(declare-fun MemProv1 () Int)
(declare-fun ProcProv1 () Int)
(declare-fun p157 () Bool)
(declare-fun p158 () Bool)
(declare-fun p159 () Bool)
(declare-fun p160 () Bool)
(declare-fun p161 () Bool)
(declare-fun p162 () Bool)
(declare-fun p163 () Bool)
(declare-fun p164 () Bool)
(declare-fun p165 () Bool)
(declare-fun p166 () Bool)
(declare-fun p167 () Bool)
(declare-fun p168 () Bool)
(declare-fun p169 () Bool)
(declare-fun p170 () Bool)
(declare-fun p171 () Bool)
(declare-fun p172 () Bool)
(declare-fun p173 () Bool)
(declare-fun p174 () Bool)
(declare-fun p175 () Bool)
(declare-fun p176 () Bool)
(declare-fun p177 () Bool)
(declare-fun p178 () Bool)
(declare-fun p179 () Bool)
(declare-fun p180 () Bool)
(declare-fun p181 () Bool)
(declare-fun p182 () Bool)
(declare-fun p183 () Bool)
(declare-fun p184 () Bool)
(declare-fun StorageProv2 () Int)
(declare-fun MemProv2 () Int)
(declare-fun ProcProv2 () Int)
(declare-fun p185 () Bool)
(declare-fun p186 () Bool)
(declare-fun p187 () Bool)
(declare-fun p188 () Bool)
(declare-fun p189 () Bool)
(declare-fun p190 () Bool)
(declare-fun p191 () Bool)
(declare-fun p192 () Bool)
(declare-fun p193 () Bool)
(declare-fun p194 () Bool)
(declare-fun p195 () Bool)
(declare-fun p196 () Bool)
(declare-fun p197 () Bool)
(declare-fun p198 () Bool)
(declare-fun p199 () Bool)
(declare-fun p200 () Bool)
(declare-fun p201 () Bool)
(declare-fun p202 () Bool)
(declare-fun p203 () Bool)
(declare-fun p204 () Bool)
(declare-fun p205 () Bool)
(declare-fun p206 () Bool)
(declare-fun p207 () Bool)
(declare-fun p208 () Bool)
(declare-fun p209 () Bool)
(declare-fun p210 () Bool)
(declare-fun p211 () Bool)
(declare-fun p212 () Bool)
(declare-fun StorageProv3 () Int)
(declare-fun MemProv3 () Int)
(declare-fun ProcProv3 () Int)
(declare-fun p213 () Bool)
(declare-fun p214 () Bool)
(declare-fun p215 () Bool)
(declare-fun p216 () Bool)
(declare-fun p217 () Bool)
(declare-fun p218 () Bool)
(declare-fun p219 () Bool)
(declare-fun p220 () Bool)
(declare-fun p221 () Bool)
(declare-fun p222 () Bool)
(declare-fun p223 () Bool)
(declare-fun p224 () Bool)
(declare-fun p225 () Bool)
(declare-fun p226 () Bool)
(declare-fun p227 () Bool)
(declare-fun p228 () Bool)
(declare-fun p229 () Bool)
(declare-fun p230 () Bool)
(declare-fun p231 () Bool)
(declare-fun p232 () Bool)
(declare-fun p233 () Bool)
(declare-fun p234 () Bool)
(declare-fun p235 () Bool)
(declare-fun p236 () Bool)
(declare-fun p237 () Bool)
(declare-fun p238 () Bool)
(declare-fun p239 () Bool)
(declare-fun p240 () Bool)
(declare-fun StorageProv4 () Int)
(declare-fun MemProv4 () Int)
(declare-fun ProcProv4 () Int)
(declare-fun p241 () Bool)
(declare-fun p242 () Bool)
(declare-fun p243 () Bool)
(declare-fun p244 () Bool)
(declare-fun p245 () Bool)
(declare-fun p246 () Bool)
(declare-fun p247 () Bool)
(declare-fun p248 () Bool)
(declare-fun p249 () Bool)
(declare-fun p250 () Bool)
(declare-fun p251 () Bool)
(declare-fun p252 () Bool)
(declare-fun p253 () Bool)
(declare-fun p254 () Bool)
(declare-fun p255 () Bool)
(declare-fun p256 () Bool)
(declare-fun p257 () Bool)
(declare-fun p258 () Bool)
(declare-fun p259 () Bool)
(declare-fun p260 () Bool)
(declare-fun p261 () Bool)
(declare-fun p262 () Bool)
(declare-fun p263 () Bool)
(declare-fun p264 () Bool)
(declare-fun p265 () Bool)
(declare-fun p266 () Bool)
(declare-fun p267 () Bool)
(declare-fun p268 () Bool)
(declare-fun StorageProv5 () Int)
(declare-fun MemProv5 () Int)
(declare-fun ProcProv5 () Int)
(declare-fun p269 () Bool)
(declare-fun p270 () Bool)
(declare-fun p271 () Bool)
(declare-fun p272 () Bool)
(declare-fun p273 () Bool)
(declare-fun p274 () Bool)
(declare-fun p275 () Bool)
(declare-fun p276 () Bool)
(declare-fun p277 () Bool)
(declare-fun p278 () Bool)
(declare-fun p279 () Bool)
(declare-fun p280 () Bool)
(declare-fun p281 () Bool)
(declare-fun p282 () Bool)
(declare-fun p283 () Bool)
(declare-fun p284 () Bool)
(declare-fun p285 () Bool)
(declare-fun p286 () Bool)
(declare-fun p287 () Bool)
(declare-fun p288 () Bool)
(declare-fun p289 () Bool)
(declare-fun p290 () Bool)
(declare-fun p291 () Bool)
(declare-fun p292 () Bool)
(declare-fun p293 () Bool)
(declare-fun p294 () Bool)
(declare-fun p295 () Bool)
(declare-fun p296 () Bool)
(declare-fun StorageProv6 () Int)
(declare-fun MemProv6 () Int)
(declare-fun ProcProv6 () Int)
(declare-fun p297 () Bool)
(declare-fun p298 () Bool)
(declare-fun p299 () Bool)
(declare-fun p300 () Bool)
(declare-fun p301 () Bool)
(declare-fun p302 () Bool)
(declare-fun p303 () Bool)
(declare-fun p304 () Bool)
(declare-fun p305 () Bool)
(declare-fun p306 () Bool)
(declare-fun p307 () Bool)
(declare-fun p308 () Bool)
(declare-fun p309 () Bool)
(declare-fun p310 () Bool)
(declare-fun p311 () Bool)
(declare-fun p312 () Bool)
(declare-fun p313 () Bool)
(declare-fun p314 () Bool)
(declare-fun p315 () Bool)
(declare-fun p316 () Bool)
(declare-fun p317 () Bool)
(declare-fun p318 () Bool)
(declare-fun p319 () Bool)
(declare-fun p320 () Bool)
(declare-fun p321 () Bool)
(declare-fun p322 () Bool)
(declare-fun p323 () Bool)
(declare-fun p324 () Bool)
(declare-fun p325 () Bool)
(declare-fun p326 () Bool)
(declare-fun p327 () Bool)
(declare-fun p328 () Bool)
(declare-fun p329 () Bool)
(declare-fun p330 () Bool)
(declare-fun p331 () Bool)
(declare-fun p332 () Bool)
(declare-fun p333 () Bool)
(declare-fun p334 () Bool)
(declare-fun p335 () Bool)
(declare-fun p336 () Bool)
(declare-fun p337 () Bool)
(declare-fun p338 () Bool)
(declare-fun p339 () Bool)
(declare-fun p340 () Bool)
(declare-fun p341 () Bool)
(declare-fun p342 () Bool)
(declare-fun g0 () Bool)
(declare-fun g1 () Bool)
(declare-fun g2 () Bool)
(declare-fun g6 () Bool)
(declare-fun g7 () Bool)
(declare-fun g9 () Bool)
(declare-fun g15 () Bool)
(declare-fun g17 () Bool)
(declare-fun g23 () Bool)
(declare-fun g25 () Bool)
(declare-fun g30 () Bool)
(declare-fun g31 () Bool)
(declare-fun g32 () Bool)
(declare-fun g33 () Bool)
(declare-fun g34 () Bool)
(declare-fun g36 () Bool)
(declare-fun g37 () Bool)
(declare-fun g38 () Bool)
(declare-fun g39 () Bool)
(assert (=> p0 (or (= C1_VM1 0) (= C1_VM1 1))))
(assert (=> p1 (or (= C1_VM2 0) (= C1_VM2 1))))
(assert (=> p2 (or (= C1_VM3 0) (= C1_VM3 1))))
(assert (=> p3 (or (= C1_VM4 0) (= C1_VM4 1))))
(assert (=> p4 (or (= C1_VM5 0) (= C1_VM5 1))))
(assert (=> p5 (or (= C1_VM6 0) (= C1_VM6 1))))
(assert (=> p6 (or (= C2_VM1 0) (= C2_VM1 1))))
(assert (=> p7 (or (= C2_VM2 0) (= C2_VM2 1))))
(assert (=> p8 (or (= C2_VM3 0) (= C2_VM3 1))))
(assert (=> p9 (or (= C2_VM4 0) (= C2_VM4 1))))
(assert (=> p10 (or (= C2_VM5 0) (= C2_VM5 1))))
(assert (=> p11 (or (= C2_VM6 0) (= C2_VM6 1))))
(assert (=> p12 (or (= C3_VM1 0) (= C3_VM1 1))))
(assert (=> p13 (or (= C3_VM2 0) (= C3_VM2 1))))
(assert (=> p14 (or (= C3_VM3 0) (= C3_VM3 1))))
(assert (=> p15 (or (= C3_VM4 0) (= C3_VM4 1))))
(assert (=> p16 (or (= C3_VM5 0) (= C3_VM5 1))))
(assert (=> p17 (or (= C3_VM6 0) (= C3_VM6 1))))
(assert (=> p18 (or (= C4_VM1 0) (= C4_VM1 1))))
(assert (=> p19 (or (= C4_VM2 0) (= C4_VM2 1))))
(assert (=> p20 (or (= C4_VM3 0) (= C4_VM3 1))))
(assert (=> p21 (or (= C4_VM4 0) (= C4_VM4 1))))
(assert (=> p22 (or (= C4_VM5 0) (= C4_VM5 1))))
(assert (=> p23 (or (= C4_VM6 0) (= C4_VM6 1))))
(assert (=> p24 (or (= C5_VM1 0) (= C5_VM1 1))))
(assert (=> p25 (or (= C5_VM2 0) (= C5_VM2 1))))
(assert (=> p26 (or (= C5_VM3 0) (= C5_VM3 1))))
(assert (=> p27 (or (= C5_VM4 0) (= C5_VM4 1))))
(assert (=> p28 (or (= C5_VM5 0) (= C5_VM5 1))))
(assert (=> p29 (or (= C5_VM6 0) (= C5_VM6 1))))
(assert (=> p30 (=> (= C1_VM1 1) (not (= VM1Type 0)))))
(assert (=> p31 (=> (= C1_VM2 1) (not (= VM2Type 0)))))
(assert (=> p32 (=> (= C1_VM3 1) (not (= VM3Type 0)))))
(assert (=> p33 (=> (= C1_VM4 1) (not (= VM4Type 0)))))
(assert (=> p34 (=> (= C1_VM5 1) (not (= VM5Type 0)))))
(assert (=> p35 (=> (= C1_VM6 1) (not (= VM6Type 0)))))
(assert (=> p36 (=> (= C2_VM1 1) (not (= VM1Type 0)))))
(assert (=> p37 (=> (= C2_VM2 1) (not (= VM2Type 0)))))
(assert (=> p38 (=> (= C2_VM3 1) (not (= VM3Type 0)))))
(assert (=> p39 (=> (= C2_VM4 1) (not (= VM4Type 0)))))
(assert (=> p40 (=> (= C2_VM5 1) (not (= VM5Type 0)))))
(assert (=> p41 (=> (= C2_VM6 1) (not (= VM6Type 0)))))
(assert (=> p42 (=> (= C3_VM1 1) (not (= VM1Type 0)))))
(assert (=> p43 (=> (= C3_VM2 1) (not (= VM2Type 0)))))
(assert (=> p44 (=> (= C3_VM3 1) (not (= VM3Type 0)))))
(assert (=> p45 (=> (= C3_VM4 1) (not (= VM4Type 0)))))
(assert (=> p46 (=> (= C3_VM5 1) (not (= VM5Type 0)))))
(assert (=> p47 (=> (= C3_VM6 1) (not (= VM6Type 0)))))
(assert (=> p48 (=> (= C4_VM1 1) (not (= VM1Type 0)))))
(assert (=> p49 (=> (= C4_VM2 1) (not (= VM2Type 0)))))
(assert (=> p50 (=> (= C4_VM3 1) (not (= VM3Type 0)))))
(assert (=> p51 (=> (= C4_VM4 1) (not (= VM4Type 0)))))
(assert (=> p52 (=> (= C4_VM5 1) (not (= VM5Type 0)))))
(assert (=> p53 (=> (= C4_VM6 1) (not (= VM6Type 0)))))
(assert (=> p54 (=> (= C5_VM1 1) (not (= VM1Type 0)))))
(assert (=> p55 (=> (= C5_VM2 1) (not (= VM2Type 0)))))
(assert (=> p56 (=> (= C5_VM3 1) (not (= VM3Type 0)))))
(assert (=> p57 (=> (= C5_VM4 1) (not (= VM4Type 0)))))
(assert (=> p58 (=> (= C5_VM5 1) (not (= VM5Type 0)))))
(assert (=> p59 (=> (= C5_VM6 1) (not (= VM6Type 0)))))
(assert (=> p60 (= C1_VM1 1)))
(assert (=> p61 (= C2_VM1 0)))
(assert (=> p62 (= C3_VM1 0)))
(assert (=> p63 (= C4_VM1 0)))
(assert (=> p64 (= C1_VM2 0)))
(assert (=> p65 (= C2_VM2 0)))
(assert (=> p66 (= C3_VM2 0)))
(assert (=> p67 (= C4_VM2 1)))
(assert (=> p68 (= C1_VM3 0)))
(assert (=> p69 (= C2_VM3 1)))
(assert (=> p70 (= C3_VM3 0)))
(assert (=> p71 (= C4_VM3 0)))
(assert (=> p72 (= C1_VM4 0)))
(assert (=> p73 (= C2_VM4 0)))
(assert (=> p74 (= C3_VM4 1)))
(assert (=> p75 (= C4_VM4 0)))
(assert (>= PriceProv5 PriceProv6))
(assert (=> |LabelConflict: 0| (<= (+ 0 C1_VM1 C2_VM1) 1)))
(assert (=> |LabelConflict: 1| (<= (+ 0 C1_VM1 C3_VM1) 1)))
(assert (=> |LabelConflict: 2| (<= (+ 0 C1_VM1 C4_VM1) 1)))
(assert (=> |LabelConflict: 3| (<= (+ 0 C1_VM1 C5_VM1) 1)))
(assert (=> |LabelConflict: 4| (<= (+ 0 C1_VM2 C2_VM2) 1)))
(assert (=> |LabelConflict: 5| (<= (+ 0 C1_VM2 C3_VM2) 1)))
(assert (=> |LabelConflict: 6| (<= (+ 0 C1_VM2 C4_VM2) 1)))
(assert (=> |LabelConflict: 7| (<= (+ 0 C1_VM2 C5_VM2) 1)))
(assert (=> |LabelConflict: 8| (<= (+ 0 C1_VM3 C2_VM3) 1)))
(assert (=> |LabelConflict: 9| (<= (+ 0 C1_VM3 C3_VM3) 1)))
(assert (=> |LabelConflict: 10| (<= (+ 0 C1_VM3 C4_VM3) 1)))
(assert (=> |LabelConflict: 11| (<= (+ 0 C1_VM3 C5_VM3) 1)))
(assert (=> |LabelConflict: 12| (<= (+ 0 C1_VM4 C2_VM4) 1)))
(assert (=> |LabelConflict: 13| (<= (+ 0 C1_VM4 C3_VM4) 1)))
(assert (=> |LabelConflict: 14| (<= (+ 0 C1_VM4 C4_VM4) 1)))
(assert (=> |LabelConflict: 15| (<= (+ 0 C1_VM4 C5_VM4) 1)))
(assert (=> |LabelConflict: 16| (<= (+ 0 C1_VM5 C2_VM5) 1)))
(assert (=> |LabelConflict: 17| (<= (+ 0 C1_VM5 C3_VM5) 1)))
(assert (=> |LabelConflict: 18| (<= (+ 0 C1_VM5 C4_VM5) 1)))
(assert (=> |LabelConflict: 19| (<= (+ 0 C1_VM5 C5_VM5) 1)))
(assert (=> |LabelConflict: 20| (<= (+ 0 C1_VM6 C2_VM6) 1)))
(assert (=> |LabelConflict: 21| (<= (+ 0 C1_VM6 C3_VM6) 1)))
(assert (=> |LabelConflict: 22| (<= (+ 0 C1_VM6 C4_VM6) 1)))
(assert (=> |LabelConflict: 23| (<= (+ 0 C1_VM6 C5_VM6) 1)))
(assert (=> |LabelConflict: 24| (<= (+ 0 C2_VM1 C3_VM1) 1)))
(assert (=> |LabelConflict: 25| (<= (+ 0 C2_VM2 C3_VM2) 1)))
(assert (=> |LabelConflict: 26| (<= (+ 0 C2_VM3 C3_VM3) 1)))
(assert (=> |LabelConflict: 27| (<= (+ 0 C2_VM4 C3_VM4) 1)))
(assert (=> |LabelConflict: 28| (<= (+ 0 C2_VM5 C3_VM5) 1)))
(assert (=> |LabelConflict: 29| (<= (+ 0 C2_VM6 C3_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound0
    (= (+ 0 C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5 C1_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound1
    (>= (+ 0
           C2_VM1
           C2_VM2
           C2_VM3
           C2_VM4
           C2_VM5
           C2_VM6
           C3_VM1
           C3_VM2
           C3_VM3
           C3_VM4
           C3_VM5
           C3_VM6)
        3)))
(assert (=> |LabelConflict: 30| (<= (+ 0 C4_VM1 C1_VM1) 1)))
(assert (=> |LabelConflict: 31| (<= (+ 0 C4_VM1 C2_VM1) 1)))
(assert (=> |LabelConflict: 32| (<= (+ 0 C4_VM1 C3_VM1) 1)))
(assert (=> |LabelConflict: 33| (<= (+ 0 C4_VM1 C5_VM1) 1)))
(assert (=> |LabelConflict: 34| (<= (+ 0 C4_VM2 C1_VM2) 1)))
(assert (=> |LabelConflict: 35| (<= (+ 0 C4_VM2 C2_VM2) 1)))
(assert (=> |LabelConflict: 36| (<= (+ 0 C4_VM2 C3_VM2) 1)))
(assert (=> |LabelConflict: 37| (<= (+ 0 C4_VM2 C5_VM2) 1)))
(assert (=> |LabelConflict: 38| (<= (+ 0 C4_VM3 C1_VM3) 1)))
(assert (=> |LabelConflict: 39| (<= (+ 0 C4_VM3 C2_VM3) 1)))
(assert (=> |LabelConflict: 40| (<= (+ 0 C4_VM3 C3_VM3) 1)))
(assert (=> |LabelConflict: 41| (<= (+ 0 C4_VM3 C5_VM3) 1)))
(assert (=> |LabelConflict: 42| (<= (+ 0 C4_VM4 C1_VM4) 1)))
(assert (=> |LabelConflict: 43| (<= (+ 0 C4_VM4 C2_VM4) 1)))
(assert (=> |LabelConflict: 44| (<= (+ 0 C4_VM4 C3_VM4) 1)))
(assert (=> |LabelConflict: 45| (<= (+ 0 C4_VM4 C5_VM4) 1)))
(assert (=> |LabelConflict: 46| (<= (+ 0 C4_VM5 C1_VM5) 1)))
(assert (=> |LabelConflict: 47| (<= (+ 0 C4_VM5 C2_VM5) 1)))
(assert (=> |LabelConflict: 48| (<= (+ 0 C4_VM5 C3_VM5) 1)))
(assert (=> |LabelConflict: 49| (<= (+ 0 C4_VM5 C5_VM5) 1)))
(assert (=> |LabelConflict: 50| (<= (+ 0 C4_VM6 C1_VM6) 1)))
(assert (=> |LabelConflict: 51| (<= (+ 0 C4_VM6 C2_VM6) 1)))
(assert (=> |LabelConflict: 52| (<= (+ 0 C4_VM6 C3_VM6) 1)))
(assert (=> |LabelConflict: 53| (<= (+ 0 C4_VM6 C5_VM6) 1)))
(assert (let ((a!1 (= (+ 0 C5_VM1 C4_VM1 C1_VM1)
              (ite (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1) 1 0))))
  (=> |LabelFullDeployment: 2| a!1)))
(assert (let ((a!1 (= (+ 0 C5_VM2 C4_VM2 C1_VM2)
              (ite (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1) 1 0))))
  (=> |LabelFullDeployment: 3| a!1)))
(assert (let ((a!1 (= (+ 0 C5_VM3 C4_VM3 C1_VM3)
              (ite (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1) 1 0))))
  (=> |LabelFullDeployment: 4| a!1)))
(assert (let ((a!1 (= (+ 0 C5_VM4 C4_VM4 C1_VM4)
              (ite (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1) 1 0))))
  (=> |LabelFullDeployment: 5| a!1)))
(assert (let ((a!1 (= (+ 0 C5_VM5 C4_VM5 C1_VM5)
              (ite (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1) 1 0))))
  (=> |LabelFullDeployment: 6| a!1)))
(assert (let ((a!1 (= (+ 0 C5_VM6 C4_VM6 C1_VM6)
              (ite (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1) 1 0))))
  (=> |LabelFullDeployment: 7| a!1)))
(assert (let ((a!1 (> (- (* 10 (+ 0 C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5 C4_VM6))
                 (+ 0 C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5 C5_VM6))
              0)))
  (=> |LabelOneToMany: 8| a!1)))
(assert (let ((a!1 (<= (- (* 10 (+ 0 C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5 C4_VM6))
                  (+ 0 C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5 C5_VM6))
               10)))
  (=> |LabelOneToMany: 9| a!1)))
(assert (=> LabelUpperLowerEqualBound10
    (>= (+ 0 C1_VM1 C1_VM2 C1_VM3 C1_VM4 C1_VM5 C1_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound11
    (>= (+ 0 C2_VM1 C2_VM2 C2_VM3 C2_VM4 C2_VM5 C2_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound12
    (>= (+ 0 C3_VM1 C3_VM2 C3_VM3 C3_VM4 C3_VM5 C3_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound13
    (>= (+ 0 C4_VM1 C4_VM2 C4_VM3 C4_VM4 C4_VM5 C4_VM6) 1)))
(assert (=> LabelUpperLowerEqualBound14
    (>= (+ 0 C5_VM1 C5_VM2 C5_VM3 C5_VM4 C5_VM5 C5_VM6) 1)))
(assert (=> p145 (>= PriceProv1 0)))
(assert (=> p146 (=> (= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 0) (= PriceProv1 0))))
(assert (=> p147 (>= PriceProv2 0)))
(assert (=> p148 (=> (= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 0) (= PriceProv2 0))))
(assert (=> p149 (>= PriceProv3 0)))
(assert (=> p150 (=> (= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 0) (= PriceProv3 0))))
(assert (=> p151 (>= PriceProv4 0)))
(assert (=> p152 (=> (= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 0) (= PriceProv4 0))))
(assert (=> p153 (>= PriceProv5 0)))
(assert (=> p154 (=> (= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 0) (= PriceProv5 0))))
(assert (=> p155 (>= PriceProv6 0)))
(assert (=> p156 (=> (= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 0) (= PriceProv6 0))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 1))
               (and (= PriceProv1 120)
                    (= ProcProv1 900)
                    (= MemProv1 1350)
                    (= StorageProv1 42000)))))
  (=> p157 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 2))
               (and (= PriceProv1 140)
                    (= ProcProv1 900)
                    (= MemProv1 1350)
                    (= StorageProv1 42000)))))
  (=> p158 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 3))
               (and (= PriceProv1 140)
                    (= ProcProv1 900)
                    (= MemProv1 1350)
                    (= StorageProv1 42000)))))
  (=> p159 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 4))
               (and (= PriceProv1 180)
                    (= ProcProv1 1800)
                    (= MemProv1 1350)
                    (= StorageProv1 51000)))))
  (=> p160 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 5))
               (and (= PriceProv1 210)
                    (= ProcProv1 1800)
                    (= MemProv1 1350)
                    (= StorageProv1 51000)))))
  (=> p161 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 6))
               (and (= PriceProv1 210)
                    (= ProcProv1 1800)
                    (= MemProv1 1350)
                    (= StorageProv1 51000)))))
  (=> p162 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 7))
               (and (= PriceProv1 240)
                    (= ProcProv1 1800)
                    (= MemProv1 3150)
                    (= StorageProv1 69000)))))
  (=> p163 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 8))
               (and (= PriceProv1 280)
                    (= ProcProv1 1800)
                    (= MemProv1 3150)
                    (= StorageProv1 69000)))))
  (=> p164 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 9))
               (and (= PriceProv1 280)
                    (= ProcProv1 1800)
                    (= MemProv1 3150)
                    (= StorageProv1 69000)))))
  (=> p165 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 10))
               (and (= PriceProv1 480)
                    (= ProcProv1 3600)
                    (= MemProv1 6750)
                    (= StorageProv1 141000)))))
  (=> p166 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 11))
               (and (= PriceProv1 560)
                    (= ProcProv1 3600)
                    (= MemProv1 6750)
                    (= StorageProv1 141000)))))
  (=> p167 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 12))
               (and (= PriceProv1 560)
                    (= ProcProv1 3600)
                    (= MemProv1 6750)
                    (= StorageProv1 141000)))))
  (=> p168 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 13))
               (and (= PriceProv1 630)
                    (= ProcProv1 1800)
                    (= MemProv1 6750)
                    (= StorageProv1 19500)))))
  (=> p169 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 14))
               (and (= PriceProv1 680)
                    (= ProcProv1 1800)
                    (= MemProv1 6750)
                    (= StorageProv1 42000)))))
  (=> p170 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 15))
               (and (= PriceProv1 840)
                    (= ProcProv1 1800)
                    (= MemProv1 13950)
                    (= StorageProv1 42000)))))
  (=> p171 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 16))
               (and (= PriceProv1 960)
                    (= ProcProv1 7200)
                    (= MemProv1 13950)
                    (= StorageProv1 285000)))))
  (=> p172 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 17))
               (and (= PriceProv1 1040)
                    (= ProcProv1 1800)
                    (= MemProv1 13950)
                    (= StorageProv1 132000)))))
  (=> p173 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 18))
               (and (= PriceProv1 1120)
                    (= ProcProv1 7200)
                    (= MemProv1 13950)
                    (= StorageProv1 285000)))))
  (=> p174 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 19))
               (and (= PriceProv1 1120)
                    (= ProcProv1 7200)
                    (= MemProv1 13950)
                    (= StorageProv1 285000)))))
  (=> p175 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 20))
               (and (= PriceProv1 1260)
                    (= ProcProv1 3600)
                    (= MemProv1 13950)
                    (= StorageProv1 42000)))))
  (=> p176 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 21))
               (and (= PriceProv1 1310)
                    (= ProcProv1 1800)
                    (= MemProv1 13950)
                    (= StorageProv1 267000)))))
  (=> p177 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 22))
               (and (= PriceProv1 1360)
                    (= ProcProv1 3600)
                    (= MemProv1 13950)
                    (= StorageProv1 87000)))))
  (=> p178 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 23))
               (and (= PriceProv1 1630)
                    (= ProcProv1 1800)
                    (= MemProv1 13950)
                    (= StorageProv1 402000)))))
  (=> p179 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 24))
               (and (= PriceProv1 1680)
                    (= ProcProv1 3600)
                    (= MemProv1 28350)
                    (= StorageProv1 87000)))))
  (=> p180 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 25))
               (and (= PriceProv1 2080)
                    (= ProcProv1 3600)
                    (= MemProv1 28350)
                    (= StorageProv1 267000)))))
  (=> p181 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 26))
               (and (= PriceProv1 2620)
                    (= ProcProv1 3600)
                    (= MemProv1 28350)
                    (= StorageProv1 537000)))))
  (=> p182 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM1 C2_VM1 C3_VM1 C4_VM1 C5_VM1) 1)
                    (= VM1Type 27))
               (and (= PriceProv1 3260)
                    (= ProcProv1 3600)
                    (= MemProv1 28350)
                    (= StorageProv1 807000)))))
  (=> p183 a!1)))
(assert (=> p184
    (or (= VM1Type 1)
        (= VM1Type 2)
        (= VM1Type 3)
        (= VM1Type 4)
        (= VM1Type 5)
        (= VM1Type 6)
        (= VM1Type 7)
        (= VM1Type 8)
        (= VM1Type 9)
        (= VM1Type 10)
        (= VM1Type 11)
        (= VM1Type 12)
        (= VM1Type 13)
        (= VM1Type 14)
        (= VM1Type 15)
        (= VM1Type 16)
        (= VM1Type 17)
        (= VM1Type 18)
        (= VM1Type 19)
        (= VM1Type 20)
        (= VM1Type 21)
        (= VM1Type 22)
        (= VM1Type 23)
        (= VM1Type 24)
        (= VM1Type 25)
        (= VM1Type 26)
        (= VM1Type 27))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 1))
               (and (= PriceProv2 120)
                    (= ProcProv2 900)
                    (= MemProv2 1350)
                    (= StorageProv2 42000)))))
  (=> p185 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 2))
               (and (= PriceProv2 140)
                    (= ProcProv2 900)
                    (= MemProv2 1350)
                    (= StorageProv2 42000)))))
  (=> p186 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 3))
               (and (= PriceProv2 140)
                    (= ProcProv2 900)
                    (= MemProv2 1350)
                    (= StorageProv2 42000)))))
  (=> p187 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 4))
               (and (= PriceProv2 180)
                    (= ProcProv2 1800)
                    (= MemProv2 1350)
                    (= StorageProv2 51000)))))
  (=> p188 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 5))
               (and (= PriceProv2 210)
                    (= ProcProv2 1800)
                    (= MemProv2 1350)
                    (= StorageProv2 51000)))))
  (=> p189 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 6))
               (and (= PriceProv2 210)
                    (= ProcProv2 1800)
                    (= MemProv2 1350)
                    (= StorageProv2 51000)))))
  (=> p190 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 7))
               (and (= PriceProv2 240)
                    (= ProcProv2 1800)
                    (= MemProv2 3150)
                    (= StorageProv2 69000)))))
  (=> p191 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 8))
               (and (= PriceProv2 280)
                    (= ProcProv2 1800)
                    (= MemProv2 3150)
                    (= StorageProv2 69000)))))
  (=> p192 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 9))
               (and (= PriceProv2 280)
                    (= ProcProv2 1800)
                    (= MemProv2 3150)
                    (= StorageProv2 69000)))))
  (=> p193 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 10))
               (and (= PriceProv2 480)
                    (= ProcProv2 3600)
                    (= MemProv2 6750)
                    (= StorageProv2 141000)))))
  (=> p194 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 11))
               (and (= PriceProv2 560)
                    (= ProcProv2 3600)
                    (= MemProv2 6750)
                    (= StorageProv2 141000)))))
  (=> p195 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 12))
               (and (= PriceProv2 560)
                    (= ProcProv2 3600)
                    (= MemProv2 6750)
                    (= StorageProv2 141000)))))
  (=> p196 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 13))
               (and (= PriceProv2 630)
                    (= ProcProv2 1800)
                    (= MemProv2 6750)
                    (= StorageProv2 19500)))))
  (=> p197 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 14))
               (and (= PriceProv2 680)
                    (= ProcProv2 1800)
                    (= MemProv2 6750)
                    (= StorageProv2 42000)))))
  (=> p198 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 15))
               (and (= PriceProv2 840)
                    (= ProcProv2 1800)
                    (= MemProv2 13950)
                    (= StorageProv2 42000)))))
  (=> p199 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 16))
               (and (= PriceProv2 960)
                    (= ProcProv2 7200)
                    (= MemProv2 13950)
                    (= StorageProv2 285000)))))
  (=> p200 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 17))
               (and (= PriceProv2 1040)
                    (= ProcProv2 1800)
                    (= MemProv2 13950)
                    (= StorageProv2 132000)))))
  (=> p201 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 18))
               (and (= PriceProv2 1120)
                    (= ProcProv2 7200)
                    (= MemProv2 13950)
                    (= StorageProv2 285000)))))
  (=> p202 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 19))
               (and (= PriceProv2 1120)
                    (= ProcProv2 7200)
                    (= MemProv2 13950)
                    (= StorageProv2 285000)))))
  (=> p203 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 20))
               (and (= PriceProv2 1260)
                    (= ProcProv2 3600)
                    (= MemProv2 13950)
                    (= StorageProv2 42000)))))
  (=> p204 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 21))
               (and (= PriceProv2 1310)
                    (= ProcProv2 1800)
                    (= MemProv2 13950)
                    (= StorageProv2 267000)))))
  (=> p205 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 22))
               (and (= PriceProv2 1360)
                    (= ProcProv2 3600)
                    (= MemProv2 13950)
                    (= StorageProv2 87000)))))
  (=> p206 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 23))
               (and (= PriceProv2 1630)
                    (= ProcProv2 1800)
                    (= MemProv2 13950)
                    (= StorageProv2 402000)))))
  (=> p207 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 24))
               (and (= PriceProv2 1680)
                    (= ProcProv2 3600)
                    (= MemProv2 28350)
                    (= StorageProv2 87000)))))
  (=> p208 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 25))
               (and (= PriceProv2 2080)
                    (= ProcProv2 3600)
                    (= MemProv2 28350)
                    (= StorageProv2 267000)))))
  (=> p209 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 26))
               (and (= PriceProv2 2620)
                    (= ProcProv2 3600)
                    (= MemProv2 28350)
                    (= StorageProv2 537000)))))
  (=> p210 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM2 C2_VM2 C3_VM2 C4_VM2 C5_VM2) 1)
                    (= VM2Type 27))
               (and (= PriceProv2 3260)
                    (= ProcProv2 3600)
                    (= MemProv2 28350)
                    (= StorageProv2 807000)))))
  (=> p211 a!1)))
(assert (=> p212
    (or (= VM2Type 1)
        (= VM2Type 2)
        (= VM2Type 3)
        (= VM2Type 4)
        (= VM2Type 5)
        (= VM2Type 6)
        (= VM2Type 7)
        (= VM2Type 8)
        (= VM2Type 9)
        (= VM2Type 10)
        (= VM2Type 11)
        (= VM2Type 12)
        (= VM2Type 13)
        (= VM2Type 14)
        (= VM2Type 15)
        (= VM2Type 16)
        (= VM2Type 17)
        (= VM2Type 18)
        (= VM2Type 19)
        (= VM2Type 20)
        (= VM2Type 21)
        (= VM2Type 22)
        (= VM2Type 23)
        (= VM2Type 24)
        (= VM2Type 25)
        (= VM2Type 26)
        (= VM2Type 27))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 1))
               (and (= PriceProv3 120)
                    (= ProcProv3 900)
                    (= MemProv3 1350)
                    (= StorageProv3 42000)))))
  (=> p213 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 2))
               (and (= PriceProv3 140)
                    (= ProcProv3 900)
                    (= MemProv3 1350)
                    (= StorageProv3 42000)))))
  (=> p214 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 3))
               (and (= PriceProv3 140)
                    (= ProcProv3 900)
                    (= MemProv3 1350)
                    (= StorageProv3 42000)))))
  (=> p215 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 4))
               (and (= PriceProv3 180)
                    (= ProcProv3 1800)
                    (= MemProv3 1350)
                    (= StorageProv3 51000)))))
  (=> p216 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 5))
               (and (= PriceProv3 210)
                    (= ProcProv3 1800)
                    (= MemProv3 1350)
                    (= StorageProv3 51000)))))
  (=> p217 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 6))
               (and (= PriceProv3 210)
                    (= ProcProv3 1800)
                    (= MemProv3 1350)
                    (= StorageProv3 51000)))))
  (=> p218 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 7))
               (and (= PriceProv3 240)
                    (= ProcProv3 1800)
                    (= MemProv3 3150)
                    (= StorageProv3 69000)))))
  (=> p219 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 8))
               (and (= PriceProv3 280)
                    (= ProcProv3 1800)
                    (= MemProv3 3150)
                    (= StorageProv3 69000)))))
  (=> p220 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 9))
               (and (= PriceProv3 280)
                    (= ProcProv3 1800)
                    (= MemProv3 3150)
                    (= StorageProv3 69000)))))
  (=> p221 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 10))
               (and (= PriceProv3 480)
                    (= ProcProv3 3600)
                    (= MemProv3 6750)
                    (= StorageProv3 141000)))))
  (=> p222 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 11))
               (and (= PriceProv3 560)
                    (= ProcProv3 3600)
                    (= MemProv3 6750)
                    (= StorageProv3 141000)))))
  (=> p223 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 12))
               (and (= PriceProv3 560)
                    (= ProcProv3 3600)
                    (= MemProv3 6750)
                    (= StorageProv3 141000)))))
  (=> p224 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 13))
               (and (= PriceProv3 630)
                    (= ProcProv3 1800)
                    (= MemProv3 6750)
                    (= StorageProv3 19500)))))
  (=> p225 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 14))
               (and (= PriceProv3 680)
                    (= ProcProv3 1800)
                    (= MemProv3 6750)
                    (= StorageProv3 42000)))))
  (=> p226 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 15))
               (and (= PriceProv3 840)
                    (= ProcProv3 1800)
                    (= MemProv3 13950)
                    (= StorageProv3 42000)))))
  (=> p227 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 16))
               (and (= PriceProv3 960)
                    (= ProcProv3 7200)
                    (= MemProv3 13950)
                    (= StorageProv3 285000)))))
  (=> p228 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 17))
               (and (= PriceProv3 1040)
                    (= ProcProv3 1800)
                    (= MemProv3 13950)
                    (= StorageProv3 132000)))))
  (=> p229 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 18))
               (and (= PriceProv3 1120)
                    (= ProcProv3 7200)
                    (= MemProv3 13950)
                    (= StorageProv3 285000)))))
  (=> p230 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 19))
               (and (= PriceProv3 1120)
                    (= ProcProv3 7200)
                    (= MemProv3 13950)
                    (= StorageProv3 285000)))))
  (=> p231 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 20))
               (and (= PriceProv3 1260)
                    (= ProcProv3 3600)
                    (= MemProv3 13950)
                    (= StorageProv3 42000)))))
  (=> p232 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 21))
               (and (= PriceProv3 1310)
                    (= ProcProv3 1800)
                    (= MemProv3 13950)
                    (= StorageProv3 267000)))))
  (=> p233 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 22))
               (and (= PriceProv3 1360)
                    (= ProcProv3 3600)
                    (= MemProv3 13950)
                    (= StorageProv3 87000)))))
  (=> p234 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 23))
               (and (= PriceProv3 1630)
                    (= ProcProv3 1800)
                    (= MemProv3 13950)
                    (= StorageProv3 402000)))))
  (=> p235 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 24))
               (and (= PriceProv3 1680)
                    (= ProcProv3 3600)
                    (= MemProv3 28350)
                    (= StorageProv3 87000)))))
  (=> p236 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 25))
               (and (= PriceProv3 2080)
                    (= ProcProv3 3600)
                    (= MemProv3 28350)
                    (= StorageProv3 267000)))))
  (=> p237 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 26))
               (and (= PriceProv3 2620)
                    (= ProcProv3 3600)
                    (= MemProv3 28350)
                    (= StorageProv3 537000)))))
  (=> p238 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM3 C2_VM3 C3_VM3 C4_VM3 C5_VM3) 1)
                    (= VM3Type 27))
               (and (= PriceProv3 3260)
                    (= ProcProv3 3600)
                    (= MemProv3 28350)
                    (= StorageProv3 807000)))))
  (=> p239 a!1)))
(assert (=> p240
    (or (= VM3Type 1)
        (= VM3Type 2)
        (= VM3Type 3)
        (= VM3Type 4)
        (= VM3Type 5)
        (= VM3Type 6)
        (= VM3Type 7)
        (= VM3Type 8)
        (= VM3Type 9)
        (= VM3Type 10)
        (= VM3Type 11)
        (= VM3Type 12)
        (= VM3Type 13)
        (= VM3Type 14)
        (= VM3Type 15)
        (= VM3Type 16)
        (= VM3Type 17)
        (= VM3Type 18)
        (= VM3Type 19)
        (= VM3Type 20)
        (= VM3Type 21)
        (= VM3Type 22)
        (= VM3Type 23)
        (= VM3Type 24)
        (= VM3Type 25)
        (= VM3Type 26)
        (= VM3Type 27))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 1))
               (and (= PriceProv4 120)
                    (= ProcProv4 900)
                    (= MemProv4 1350)
                    (= StorageProv4 42000)))))
  (=> p241 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 2))
               (and (= PriceProv4 140)
                    (= ProcProv4 900)
                    (= MemProv4 1350)
                    (= StorageProv4 42000)))))
  (=> p242 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 3))
               (and (= PriceProv4 140)
                    (= ProcProv4 900)
                    (= MemProv4 1350)
                    (= StorageProv4 42000)))))
  (=> p243 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 4))
               (and (= PriceProv4 180)
                    (= ProcProv4 1800)
                    (= MemProv4 1350)
                    (= StorageProv4 51000)))))
  (=> p244 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 5))
               (and (= PriceProv4 210)
                    (= ProcProv4 1800)
                    (= MemProv4 1350)
                    (= StorageProv4 51000)))))
  (=> p245 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 6))
               (and (= PriceProv4 210)
                    (= ProcProv4 1800)
                    (= MemProv4 1350)
                    (= StorageProv4 51000)))))
  (=> p246 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 7))
               (and (= PriceProv4 240)
                    (= ProcProv4 1800)
                    (= MemProv4 3150)
                    (= StorageProv4 69000)))))
  (=> p247 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 8))
               (and (= PriceProv4 280)
                    (= ProcProv4 1800)
                    (= MemProv4 3150)
                    (= StorageProv4 69000)))))
  (=> p248 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 9))
               (and (= PriceProv4 280)
                    (= ProcProv4 1800)
                    (= MemProv4 3150)
                    (= StorageProv4 69000)))))
  (=> p249 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 10))
               (and (= PriceProv4 480)
                    (= ProcProv4 3600)
                    (= MemProv4 6750)
                    (= StorageProv4 141000)))))
  (=> p250 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 11))
               (and (= PriceProv4 560)
                    (= ProcProv4 3600)
                    (= MemProv4 6750)
                    (= StorageProv4 141000)))))
  (=> p251 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 12))
               (and (= PriceProv4 560)
                    (= ProcProv4 3600)
                    (= MemProv4 6750)
                    (= StorageProv4 141000)))))
  (=> p252 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 13))
               (and (= PriceProv4 630)
                    (= ProcProv4 1800)
                    (= MemProv4 6750)
                    (= StorageProv4 19500)))))
  (=> p253 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 14))
               (and (= PriceProv4 680)
                    (= ProcProv4 1800)
                    (= MemProv4 6750)
                    (= StorageProv4 42000)))))
  (=> p254 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 15))
               (and (= PriceProv4 840)
                    (= ProcProv4 1800)
                    (= MemProv4 13950)
                    (= StorageProv4 42000)))))
  (=> p255 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 16))
               (and (= PriceProv4 960)
                    (= ProcProv4 7200)
                    (= MemProv4 13950)
                    (= StorageProv4 285000)))))
  (=> p256 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 17))
               (and (= PriceProv4 1040)
                    (= ProcProv4 1800)
                    (= MemProv4 13950)
                    (= StorageProv4 132000)))))
  (=> p257 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 18))
               (and (= PriceProv4 1120)
                    (= ProcProv4 7200)
                    (= MemProv4 13950)
                    (= StorageProv4 285000)))))
  (=> p258 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 19))
               (and (= PriceProv4 1120)
                    (= ProcProv4 7200)
                    (= MemProv4 13950)
                    (= StorageProv4 285000)))))
  (=> p259 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 20))
               (and (= PriceProv4 1260)
                    (= ProcProv4 3600)
                    (= MemProv4 13950)
                    (= StorageProv4 42000)))))
  (=> p260 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 21))
               (and (= PriceProv4 1310)
                    (= ProcProv4 1800)
                    (= MemProv4 13950)
                    (= StorageProv4 267000)))))
  (=> p261 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 22))
               (and (= PriceProv4 1360)
                    (= ProcProv4 3600)
                    (= MemProv4 13950)
                    (= StorageProv4 87000)))))
  (=> p262 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 23))
               (and (= PriceProv4 1630)
                    (= ProcProv4 1800)
                    (= MemProv4 13950)
                    (= StorageProv4 402000)))))
  (=> p263 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 24))
               (and (= PriceProv4 1680)
                    (= ProcProv4 3600)
                    (= MemProv4 28350)
                    (= StorageProv4 87000)))))
  (=> p264 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 25))
               (and (= PriceProv4 2080)
                    (= ProcProv4 3600)
                    (= MemProv4 28350)
                    (= StorageProv4 267000)))))
  (=> p265 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 26))
               (and (= PriceProv4 2620)
                    (= ProcProv4 3600)
                    (= MemProv4 28350)
                    (= StorageProv4 537000)))))
  (=> p266 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM4 C2_VM4 C3_VM4 C4_VM4 C5_VM4) 1)
                    (= VM4Type 27))
               (and (= PriceProv4 3260)
                    (= ProcProv4 3600)
                    (= MemProv4 28350)
                    (= StorageProv4 807000)))))
  (=> p267 a!1)))
(assert (=> p268
    (or (= VM4Type 1)
        (= VM4Type 2)
        (= VM4Type 3)
        (= VM4Type 4)
        (= VM4Type 5)
        (= VM4Type 6)
        (= VM4Type 7)
        (= VM4Type 8)
        (= VM4Type 9)
        (= VM4Type 10)
        (= VM4Type 11)
        (= VM4Type 12)
        (= VM4Type 13)
        (= VM4Type 14)
        (= VM4Type 15)
        (= VM4Type 16)
        (= VM4Type 17)
        (= VM4Type 18)
        (= VM4Type 19)
        (= VM4Type 20)
        (= VM4Type 21)
        (= VM4Type 22)
        (= VM4Type 23)
        (= VM4Type 24)
        (= VM4Type 25)
        (= VM4Type 26)
        (= VM4Type 27))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 1))
               (and (= PriceProv5 120)
                    (= ProcProv5 900)
                    (= MemProv5 1350)
                    (= StorageProv5 42000)))))
  (=> p269 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 2))
               (and (= PriceProv5 140)
                    (= ProcProv5 900)
                    (= MemProv5 1350)
                    (= StorageProv5 42000)))))
  (=> p270 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 3))
               (and (= PriceProv5 140)
                    (= ProcProv5 900)
                    (= MemProv5 1350)
                    (= StorageProv5 42000)))))
  (=> p271 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 4))
               (and (= PriceProv5 180)
                    (= ProcProv5 1800)
                    (= MemProv5 1350)
                    (= StorageProv5 51000)))))
  (=> p272 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 5))
               (and (= PriceProv5 210)
                    (= ProcProv5 1800)
                    (= MemProv5 1350)
                    (= StorageProv5 51000)))))
  (=> p273 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 6))
               (and (= PriceProv5 210)
                    (= ProcProv5 1800)
                    (= MemProv5 1350)
                    (= StorageProv5 51000)))))
  (=> p274 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 7))
               (and (= PriceProv5 240)
                    (= ProcProv5 1800)
                    (= MemProv5 3150)
                    (= StorageProv5 69000)))))
  (=> p275 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 8))
               (and (= PriceProv5 280)
                    (= ProcProv5 1800)
                    (= MemProv5 3150)
                    (= StorageProv5 69000)))))
  (=> p276 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 9))
               (and (= PriceProv5 280)
                    (= ProcProv5 1800)
                    (= MemProv5 3150)
                    (= StorageProv5 69000)))))
  (=> p277 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 10))
               (and (= PriceProv5 480)
                    (= ProcProv5 3600)
                    (= MemProv5 6750)
                    (= StorageProv5 141000)))))
  (=> p278 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 11))
               (and (= PriceProv5 560)
                    (= ProcProv5 3600)
                    (= MemProv5 6750)
                    (= StorageProv5 141000)))))
  (=> p279 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 12))
               (and (= PriceProv5 560)
                    (= ProcProv5 3600)
                    (= MemProv5 6750)
                    (= StorageProv5 141000)))))
  (=> p280 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 13))
               (and (= PriceProv5 630)
                    (= ProcProv5 1800)
                    (= MemProv5 6750)
                    (= StorageProv5 19500)))))
  (=> p281 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 14))
               (and (= PriceProv5 680)
                    (= ProcProv5 1800)
                    (= MemProv5 6750)
                    (= StorageProv5 42000)))))
  (=> p282 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 15))
               (and (= PriceProv5 840)
                    (= ProcProv5 1800)
                    (= MemProv5 13950)
                    (= StorageProv5 42000)))))
  (=> p283 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 16))
               (and (= PriceProv5 960)
                    (= ProcProv5 7200)
                    (= MemProv5 13950)
                    (= StorageProv5 285000)))))
  (=> p284 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 17))
               (and (= PriceProv5 1040)
                    (= ProcProv5 1800)
                    (= MemProv5 13950)
                    (= StorageProv5 132000)))))
  (=> p285 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 18))
               (and (= PriceProv5 1120)
                    (= ProcProv5 7200)
                    (= MemProv5 13950)
                    (= StorageProv5 285000)))))
  (=> p286 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 19))
               (and (= PriceProv5 1120)
                    (= ProcProv5 7200)
                    (= MemProv5 13950)
                    (= StorageProv5 285000)))))
  (=> p287 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 20))
               (and (= PriceProv5 1260)
                    (= ProcProv5 3600)
                    (= MemProv5 13950)
                    (= StorageProv5 42000)))))
  (=> p288 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 21))
               (and (= PriceProv5 1310)
                    (= ProcProv5 1800)
                    (= MemProv5 13950)
                    (= StorageProv5 267000)))))
  (=> p289 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 22))
               (and (= PriceProv5 1360)
                    (= ProcProv5 3600)
                    (= MemProv5 13950)
                    (= StorageProv5 87000)))))
  (=> p290 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 23))
               (and (= PriceProv5 1630)
                    (= ProcProv5 1800)
                    (= MemProv5 13950)
                    (= StorageProv5 402000)))))
  (=> p291 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 24))
               (and (= PriceProv5 1680)
                    (= ProcProv5 3600)
                    (= MemProv5 28350)
                    (= StorageProv5 87000)))))
  (=> p292 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 25))
               (and (= PriceProv5 2080)
                    (= ProcProv5 3600)
                    (= MemProv5 28350)
                    (= StorageProv5 267000)))))
  (=> p293 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 26))
               (and (= PriceProv5 2620)
                    (= ProcProv5 3600)
                    (= MemProv5 28350)
                    (= StorageProv5 537000)))))
  (=> p294 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM5 C2_VM5 C3_VM5 C4_VM5 C5_VM5) 1)
                    (= VM5Type 27))
               (and (= PriceProv5 3260)
                    (= ProcProv5 3600)
                    (= MemProv5 28350)
                    (= StorageProv5 807000)))))
  (=> p295 a!1)))
(assert (=> p296
    (or (= VM5Type 1)
        (= VM5Type 2)
        (= VM5Type 3)
        (= VM5Type 4)
        (= VM5Type 5)
        (= VM5Type 6)
        (= VM5Type 7)
        (= VM5Type 8)
        (= VM5Type 9)
        (= VM5Type 10)
        (= VM5Type 11)
        (= VM5Type 12)
        (= VM5Type 13)
        (= VM5Type 14)
        (= VM5Type 15)
        (= VM5Type 16)
        (= VM5Type 17)
        (= VM5Type 18)
        (= VM5Type 19)
        (= VM5Type 20)
        (= VM5Type 21)
        (= VM5Type 22)
        (= VM5Type 23)
        (= VM5Type 24)
        (= VM5Type 25)
        (= VM5Type 26)
        (= VM5Type 27))))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 1))
               (and (= PriceProv6 120)
                    (= ProcProv6 900)
                    (= MemProv6 1350)
                    (= StorageProv6 42000)))))
  (=> p297 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 2))
               (and (= PriceProv6 140)
                    (= ProcProv6 900)
                    (= MemProv6 1350)
                    (= StorageProv6 42000)))))
  (=> p298 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 3))
               (and (= PriceProv6 140)
                    (= ProcProv6 900)
                    (= MemProv6 1350)
                    (= StorageProv6 42000)))))
  (=> p299 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 4))
               (and (= PriceProv6 180)
                    (= ProcProv6 1800)
                    (= MemProv6 1350)
                    (= StorageProv6 51000)))))
  (=> p300 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 5))
               (and (= PriceProv6 210)
                    (= ProcProv6 1800)
                    (= MemProv6 1350)
                    (= StorageProv6 51000)))))
  (=> p301 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 6))
               (and (= PriceProv6 210)
                    (= ProcProv6 1800)
                    (= MemProv6 1350)
                    (= StorageProv6 51000)))))
  (=> p302 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 7))
               (and (= PriceProv6 240)
                    (= ProcProv6 1800)
                    (= MemProv6 3150)
                    (= StorageProv6 69000)))))
  (=> p303 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 8))
               (and (= PriceProv6 280)
                    (= ProcProv6 1800)
                    (= MemProv6 3150)
                    (= StorageProv6 69000)))))
  (=> p304 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 9))
               (and (= PriceProv6 280)
                    (= ProcProv6 1800)
                    (= MemProv6 3150)
                    (= StorageProv6 69000)))))
  (=> p305 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 10))
               (and (= PriceProv6 480)
                    (= ProcProv6 3600)
                    (= MemProv6 6750)
                    (= StorageProv6 141000)))))
  (=> p306 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 11))
               (and (= PriceProv6 560)
                    (= ProcProv6 3600)
                    (= MemProv6 6750)
                    (= StorageProv6 141000)))))
  (=> p307 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 12))
               (and (= PriceProv6 560)
                    (= ProcProv6 3600)
                    (= MemProv6 6750)
                    (= StorageProv6 141000)))))
  (=> p308 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 13))
               (and (= PriceProv6 630)
                    (= ProcProv6 1800)
                    (= MemProv6 6750)
                    (= StorageProv6 19500)))))
  (=> p309 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 14))
               (and (= PriceProv6 680)
                    (= ProcProv6 1800)
                    (= MemProv6 6750)
                    (= StorageProv6 42000)))))
  (=> p310 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 15))
               (and (= PriceProv6 840)
                    (= ProcProv6 1800)
                    (= MemProv6 13950)
                    (= StorageProv6 42000)))))
  (=> p311 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 16))
               (and (= PriceProv6 960)
                    (= ProcProv6 7200)
                    (= MemProv6 13950)
                    (= StorageProv6 285000)))))
  (=> p312 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 17))
               (and (= PriceProv6 1040)
                    (= ProcProv6 1800)
                    (= MemProv6 13950)
                    (= StorageProv6 132000)))))
  (=> p313 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 18))
               (and (= PriceProv6 1120)
                    (= ProcProv6 7200)
                    (= MemProv6 13950)
                    (= StorageProv6 285000)))))
  (=> p314 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 19))
               (and (= PriceProv6 1120)
                    (= ProcProv6 7200)
                    (= MemProv6 13950)
                    (= StorageProv6 285000)))))
  (=> p315 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 20))
               (and (= PriceProv6 1260)
                    (= ProcProv6 3600)
                    (= MemProv6 13950)
                    (= StorageProv6 42000)))))
  (=> p316 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 21))
               (and (= PriceProv6 1310)
                    (= ProcProv6 1800)
                    (= MemProv6 13950)
                    (= StorageProv6 267000)))))
  (=> p317 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 22))
               (and (= PriceProv6 1360)
                    (= ProcProv6 3600)
                    (= MemProv6 13950)
                    (= StorageProv6 87000)))))
  (=> p318 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 23))
               (and (= PriceProv6 1630)
                    (= ProcProv6 1800)
                    (= MemProv6 13950)
                    (= StorageProv6 402000)))))
  (=> p319 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 24))
               (and (= PriceProv6 1680)
                    (= ProcProv6 3600)
                    (= MemProv6 28350)
                    (= StorageProv6 87000)))))
  (=> p320 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 25))
               (and (= PriceProv6 2080)
                    (= ProcProv6 3600)
                    (= MemProv6 28350)
                    (= StorageProv6 267000)))))
  (=> p321 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 26))
               (and (= PriceProv6 2620)
                    (= ProcProv6 3600)
                    (= MemProv6 28350)
                    (= StorageProv6 537000)))))
  (=> p322 a!1)))
(assert (let ((a!1 (=> (and (>= (+ 0 C1_VM6 C2_VM6 C3_VM6 C4_VM6 C5_VM6) 1)
                    (= VM6Type 27))
               (and (= PriceProv6 3260)
                    (= ProcProv6 3600)
                    (= MemProv6 28350)
                    (= StorageProv6 807000)))))
  (=> p323 a!1)))
(assert (=> p324
    (or (= VM6Type 1)
        (= VM6Type 2)
        (= VM6Type 3)
        (= VM6Type 4)
        (= VM6Type 5)
        (= VM6Type 6)
        (= VM6Type 7)
        (= VM6Type 8)
        (= VM6Type 9)
        (= VM6Type 10)
        (= VM6Type 11)
        (= VM6Type 12)
        (= VM6Type 13)
        (= VM6Type 14)
        (= VM6Type 15)
        (= VM6Type 16)
        (= VM6Type 17)
        (= VM6Type 18)
        (= VM6Type 19)
        (= VM6Type 20)
        (= VM6Type 21)
        (= VM6Type 22)
        (= VM6Type 23)
        (= VM6Type 24)
        (= VM6Type 25)
        (= VM6Type 26)
        (= VM6Type 27))))
(assert (=> p325
    (<= (+ 0
           (* C1_VM1 1000)
           (* C2_VM1 2000)
           (* C3_VM1 2000)
           (* C4_VM1 2000)
           (* C5_VM1 1000))
        ProcProv1)))
(assert (=> p326
    (<= (+ 0
           (* C1_VM1 2048)
           (* C2_VM1 512)
           (* C3_VM1 2048)
           (* C4_VM1 16000)
           (* C5_VM1 256))
        MemProv1)))
(assert (=> p327
    (<= (+ 0
           (* C1_VM1 500)
           (* C2_VM1 1000)
           (* C3_VM1 1000)
           (* C4_VM1 2000)
           (* C5_VM1 250))
        StorageProv1)))
(assert (=> p328
    (<= (+ 0
           (* C1_VM2 1000)
           (* C2_VM2 2000)
           (* C3_VM2 2000)
           (* C4_VM2 2000)
           (* C5_VM2 1000))
        ProcProv2)))
(assert (=> p329
    (<= (+ 0
           (* C1_VM2 2048)
           (* C2_VM2 512)
           (* C3_VM2 2048)
           (* C4_VM2 16000)
           (* C5_VM2 256))
        MemProv2)))
(assert (=> p330
    (<= (+ 0
           (* C1_VM2 500)
           (* C2_VM2 1000)
           (* C3_VM2 1000)
           (* C4_VM2 2000)
           (* C5_VM2 250))
        StorageProv2)))
(assert (=> p331
    (<= (+ 0
           (* C1_VM3 1000)
           (* C2_VM3 2000)
           (* C3_VM3 2000)
           (* C4_VM3 2000)
           (* C5_VM3 1000))
        ProcProv3)))
(assert (=> p332
    (<= (+ 0
           (* C1_VM3 2048)
           (* C2_VM3 512)
           (* C3_VM3 2048)
           (* C4_VM3 16000)
           (* C5_VM3 256))
        MemProv3)))
(assert (=> p333
    (<= (+ 0
           (* C1_VM3 500)
           (* C2_VM3 1000)
           (* C3_VM3 1000)
           (* C4_VM3 2000)
           (* C5_VM3 250))
        StorageProv3)))
(assert (=> p334
    (<= (+ 0
           (* C1_VM4 1000)
           (* C2_VM4 2000)
           (* C3_VM4 2000)
           (* C4_VM4 2000)
           (* C5_VM4 1000))
        ProcProv4)))
(assert (=> p335
    (<= (+ 0
           (* C1_VM4 2048)
           (* C2_VM4 512)
           (* C3_VM4 2048)
           (* C4_VM4 16000)
           (* C5_VM4 256))
        MemProv4)))
(assert (=> p336
    (<= (+ 0
           (* C1_VM4 500)
           (* C2_VM4 1000)
           (* C3_VM4 1000)
           (* C4_VM4 2000)
           (* C5_VM4 250))
        StorageProv4)))
(assert (=> p337
    (<= (+ 0
           (* C1_VM5 1000)
           (* C2_VM5 2000)
           (* C3_VM5 2000)
           (* C4_VM5 2000)
           (* C5_VM5 1000))
        ProcProv5)))
(assert (=> p338
    (<= (+ 0
           (* C1_VM5 2048)
           (* C2_VM5 512)
           (* C3_VM5 2048)
           (* C4_VM5 16000)
           (* C5_VM5 256))
        MemProv5)))
(assert (=> p339
    (<= (+ 0
           (* C1_VM5 500)
           (* C2_VM5 1000)
           (* C3_VM5 1000)
           (* C4_VM5 2000)
           (* C5_VM5 250))
        StorageProv5)))
(assert (=> p340
    (<= (+ 0
           (* C1_VM6 1000)
           (* C2_VM6 2000)
           (* C3_VM6 2000)
           (* C4_VM6 2000)
           (* C5_VM6 1000))
        ProcProv6)))
(assert (=> p341
    (<= (+ 0
           (* C1_VM6 2048)
           (* C2_VM6 512)
           (* C3_VM6 2048)
           (* C4_VM6 16000)
           (* C5_VM6 256))
        MemProv6)))
(assert (=> p342
    (<= (+ 0
           (* C1_VM6 500)
           (* C2_VM6 1000)
           (* C3_VM6 1000)
           (* C4_VM6 2000)
           (* C5_VM6 250))
        StorageProv6)))
(assert (=> g0 (= C1_VM1 1)))
(assert (=> g1 (= VM2Type 9)))
(assert (=> g2 (= C1_VM1 1)))
(assert (=> g6 (= C1_VM1 1)))
(assert (=> g7 (= VM6Type 3)))
(assert (=> g9 (= VM2Type 9)))
(assert (=> g15 (= VM6Type 3)))
(assert (=> g17 (= VM2Type 9)))
(assert (=> g23 (= VM6Type 3)))
(assert (=> g25 (= VM2Type 9)))
(assert (=> g30 (= C4_VM4 1)))
(assert (=> g31 (= VM6Type 3)))
(assert (=> g32 (= C5_VM5 1)))
(assert (=> g33 (= VM2Type 9)))
(assert (=> g34 (= C5_VM5 1)))
(assert (=> g36 (= VM3Type 1)))
(assert (=> g37 (= VM3Type 2)))
(assert (=> g38 (= C5_VM5 1)))
(assert (=> g39 (= VM6Type 3)))

 UNSAT: [p75, g30]